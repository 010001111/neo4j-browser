= Neo4j Browser =

*Explore the graph, one query at a time.*

Neo4j Browser is http://github.com/neo4j/neo4j/[Neo4j's] built-in client application, a mashup of a REPL, data visualization and lightweight IDE.

== Goals ==

* developer focused
* every interaction is a demonstration
* uses only public APIs
* for modern browsers, with reasonable fallbacks

== Development ==

Set up your environment::

  * Install https://nodejs.org/[node.js]
  * Clone this Github repository
  * `npm install`
+
This installs npm modules needed to build the browser code.

  * `npm install -g grunt-cli`
+
This puts the `grunt` command on your path.

Run in development mode::

  * Run Neo4j server (from a downloaded distribution of Neo4j, or from your IDE)
  * `grunt server`
+
This listens on port 9000, serving up static documents, and forwarding other HTTP requests to Neo4j on port 7474. Bolt requests are not forwarded, they are sent directly to the Neo4j server on port 7687.
Any local changes to the browser code will be applied immediatley by reloading the page.

Sync server::
To setup a local sync login server go to project root and invoke `node sync-server/server.js`.
An express server now started on https://localhost:9001 with self signed TLS certificates.

== Packaging ==

To package Neo4j Browser in to a jar:

 * Compile the project with `grunt build`
 * Build a jar using `mvn package`
== Custom Builds ==

You can customize Neo4j Browser with your own content and styles. The build process accepts a `--custom`
switch that specifies a subdirectory of the `./custom` to be layered onto the standard build. By layering,
your fork of neo4j-browser can continue to get updates without interfering with your work.

Customize::

* Fork this repository
* Duplicate one of the included customization examples (either `custom/autumn` or `custom/presentation`)
  `cp -r custom/presentation custom/mybrowser`
* Develop the customization
  `grunt server --custom=mybrowser`
* See your changes at `http://localhost:9000`

== Adding a new Cypher keyword ==

The resulting artifact can be loaded by replacing the existing Neo4j Browser jar in the Neo4j `lib` directory and restarting the server to remount the new assets.

== Feedback ==

* Questions or comments? - Join the http://neo4j.com/blog/public-neo4j-users-slack-group/[Neo4j users Slack community]

== Contributing ==
All bug reports, feature requests and pull requests are very welcome.

== Licensing ==
Neo4j is an open source product. We support a Community edition under the GPLv3 license.
