[[rest-api-transactional]] == Transactional HTTP endpoint ==

The transactional HTTP endpoint is the primary interface for doing work with Neo4j, allowing a series of Cypher statements to execute within the scope of a 
single transaction. The transaction may be kept open across multiple HTTP requests, each of which may contain multiple Cypher statements. The transaction is left open until you choose to commit or roll back the work, though may be automatically rolled back when a timeout has been exceeded. 

The server guards against orphaned transactions by using a timeout which resets every time a statment is submitted to the transactional endpoint. If there are
no requests for a given transaction within the timeout period, the server will
roll it back. You can configure the timeout duration in 'neo4j-server.properties', 
by setting 'org.neo4j.server.transaction.timeout' to the number of seconds before
timeout. The default timeout is 60 seconds.

Any statement which fails will invalidate the transaction, causing a rollback. 

Once committed or rolled back, requests to a transaction will be rejected. 

[NOTE] This is a new feature in the API, and is still experimental. Expect this
API to change without notice, until this note is removed.

[NOTE] The serialization format for Cypher results is mostly the same as the
<<rest-api-Cypher,Cypher endpoint>>. However, the format for raw entities is
slightly less verbose and does not include hypermedia links.

[NOTE] Open transactions are not shared among members of an HA cluster.
Therefore, if you use this endpoint in an HA cluster, you must ensure that all
requests for a given transaction are sent to the same Neo4j instance.

include::begin-a-transaction.asciidoc[]

include::execute-statements-in-an-open-transaction.asciidoc[]

include::commit-an-open-transaction.asciidoc[]

include::rollback-an-open-transaction.asciidoc[]

include::begin-and-commit-a-transaction-in-one-request.asciidoc[]

include::handling-errors.asciidoc[]


